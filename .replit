modules = ["python-3.11"]

[nix]
channel = "stable-24_05"
packages = ["SDL2", "SDL2_image", "SDL2_mixer", "SDL2_ttf", "fontconfig", "freetype", "libjpeg", "libpng", "libxcrypt", "pkg-config", "portmidi", "xsimd"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Cyberpunk Adventure Game"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "cyberpunk_adventure"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "ASCII Art Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Tactical Abilities Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Animation Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Tactical Combat Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Dynamic Codex Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "New Animations Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Setup Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Panel Typing Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Character Intro Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Sound Design Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Sound Design Demo"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Exit Feature Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Ollama Token Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Cyberpunk Game Demo"

[[workflows.workflow]]
name = "Cyberpunk Adventure Game"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"
waitForPort = 5000

[[workflows.workflow]]
name = "cyberpunk_adventure"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "ASCII Art Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_ascii_art.py"

[[workflows.workflow]]
name = "Tactical Abilities Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_tactical_abilities.py"

[[workflows.workflow]]
name = "Animation Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_animations.py"

[[workflows.workflow]]
name = "Tactical Combat Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_tactical_combat.py"

[[workflows.workflow]]
name = "Dynamic Codex Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_dynamic_codex.py"

[[workflows.workflow]]
name = "New Animations Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_new_animations.py"

[[workflows.workflow]]
name = "Setup Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python setup.py"

[[workflows.workflow]]
name = "Panel Typing Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_panel_typing.py"

[[workflows.workflow]]
name = "Character Intro Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_character_intro.py"

[[workflows.workflow]]
name = "Sound Design Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_sound_design.py"

[[workflows.workflow]]
name = "Sound Design Demo"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_sound_design_demo.py"

[[workflows.workflow]]
name = "Exit Feature Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_exit_feature.py"

[[workflows.workflow]]
name = "Ollama Token Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_ollama_token_support.py"

[[workflows.workflow]]
name = "Cyberpunk Game Demo"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[deployment]
run = ["sh", "-c", "python main.py"]
